name: 'Deploy cluter'
description: 'Deploy k8s cluster'
inputs:
  osc_access_key:
    description: 'ACCESS KEY'
    required: true
  osc_secret_key:
    description: 'SECRET KEY'
    required: true
  osc_region:
    description: 'Region'
    required: true
  will_install_ccm:
    description: 'Configure the cluster for future CCM installation ("true" or "false")'
    required: true
    default: "false"
  repository_folder:
    description: 'Folder where the repo can be found'
    required: false
    default: "./"
  rke_version:
    description: 'Version of rke to use'
    required: false
    default: "v1.4.3"
  kubernetes_version:
    description: 'Version of the kubernetes to deploy (See https://github.com/rancher/rke/releases)'
    required: false
    default: "v1.24.10-rancher4-1"
  bastion_vm_type:
    description: 'Vm type of bastion instance'
    required: false
    default: "tinav5.c4r8p1"
  bastion_volume_type:
    description: 'Volume type of bastion instance'
    required: false
    default: "gp2"
  bastion_volume_size:
    description: 'Volume size of bastion instance'
    required: false
    default: 15
  bastion_iops:
    description: 'Iops of bastion instance'
    required: false
    default: 1500
  control_plane_vm_type:
    description: 'Vm type of control plane instance'
    required: false
    default: "tinav5.c4r8p1"
  control_plane_count:
    description: 'Number of control plane instance'
    required: false
    default: 1
  control_plane_volume_type:
    description: 'Volume type of control plane instance'
    required: false
    default: "gp2"
  control_plane_volume_size:
    description: 'Volume size of control plane instance'
    required: false
    default: 15
  control_plane_iops:
    description: 'Iops of control plane instance'
    required: false
    default: 1500
  worker_vm_type:
    description: 'Vm type of worker instance'
    required: false
    default: "tinav5.c4r8p1"
  worker_count:
    description: 'Number of worker instance'
    required: false
    default: 2
  worker_volume_type:
    description: 'Volume type of worker instance'
    required: false
    default: "standard"
  worker_volume_size:
    description: 'Volume size of worker instance'
    required: false
    default: 15
  worker_iops:
    description: 'Iops oof worker instance'
    required: false
    default: 1500
  public_cloud:
    description: 'Create the cluster in the public or private cloud'
    required: false
    default: "false"
  image_id:
    description: 'Image ID used for all VMs'
    required: false
    default: "ami-d76e520a"
runs:
  using: "composite"
  steps:
    - uses: actions/setup-python@v2
    - run: pip install ansible
      shell: bash
    - uses: actions/setup-node@v2
      with:
        node-version: '14'
    - name: generate a unique variable based on timestamp
      run: echo cluster_name=cluster$(date +%s) >> $GITHUB_ENV
      shell: bash
    - name: Setup Terraform  
      uses: hashicorp/setup-terraform@v1
    - name: Terraform Init
      id: init
      run: terraform init
      working-directory: ${{ inputs.repository_folder }}
      shell: bash
    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color
      working-directory: ${{ inputs.repository_folder }}
      shell: bash
    - name: Terraform Apply
      run: terraform apply -var "cluster_name=${{ env.cluster_name }}" -var "will_install_ccm=${{ inputs.will_install_ccm }}" -var "rke_version=${{ inputs.rke_version }}" -var "kubernetes_version=${{ inputs.kubernetes_version }}" -var "bastion_vm_type=${{ inputs.bastion_vm_type }}" -var "bastion_volume_type=${{ inputs.bastion_volume_type }}" -var "bastion_volume_size=${{ inputs.bastion_volume_size}}" -var "bastion_iops=${{ inputs.bastion_iops}}" -var "control_plane_vm_type=${{ inputs.control_plane_vm_type }}" -var "control_plane_count=${{ inputs.control_plane_count}}" -var "control_plane_volume_type=${{ inputs.control_plane_volume_type }}" -var "control_plane_volume_size=${{ inputs.control_plane_volume_size }}"  -var "control_plane_iops=${{ inputs.control_plane_iops }}" -var "worker_vm_type=${{ inputs.worker_vm_type }}" -var "worker_count=${{ inputs.worker_count }}" -var "worker_volume_type=${{ inputs.worker_volume_type }}" -var "worker_volume_size=${{ inputs.worker_volume_size }}" -var "worker_iops=${{ inputs.worker_iops }}" -var "public_cloud=${{ inputs.public_cloud }}" -var "image_id=${{ inputs.image_id }}" -auto-approve
      env:    
        TF_VAR_access_key_id: ${{ inputs.osc_access_key }}
        TF_VAR_secret_key_id: ${{ inputs.osc_secret_key }}
        TF_VAR_region: ${{ inputs.osc_region }}
      working-directory: ${{ inputs.repository_folder }}
      shell: bash
    - name: Set up the cluster
      run: |
        ./rke/rke up --config rke/cluster.yml
        /bin/bash -c 'sed -i "s|server:.*$|server: \"$(cat kube-apiserver-url.txt):6443\"|" rke/kube_config_cluster.yml'
      working-directory: ${{ inputs.repository_folder }}
      shell: bash
